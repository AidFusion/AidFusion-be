// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum USER_TYPE {
  DONOR
  RESTAURANT_OWNER
  LESS_PRIVILEGED_USER
}

enum TRANSACTION_STATUS {
  SUCCESS
  PENDING
  FAILED
}

enum CURRENCY {
  NGN
  USD
}

model Account {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  email           String            @unique
  name            String
  online          Boolean
  createdAt       DateTime          @default(now())
  lastSeen        DateTime          @updatedAt()
  type            USER_TYPE
  password        String
  verified        Boolean           @default(false)
  mobile_no       String
  avatar          String            @default("https://www.svgrepo.com/show/304564/user-avatar-face.svg")
  Donation        Donation[]
  Subscription    Subscription[]
  UserMealHistory UserMealHistory[]
}

model Donation {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  amount      Int
  vat         Int?
  totalAmount Int
  refrence    String
  user        Account            @relation(fields: [userId], references: [id])
  userId      String             @db.ObjectId
  paidAt      DateTime           @default(now())
  status      TRANSACTION_STATUS
  currency    CURRENCY
}

model Subscription {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  user   Account  @relation(fields: [userId], references: [id])
  email  String   @unique
  userId String   @db.ObjectId
  date   DateTime @default(now())
}

model Meals {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  img   String
  name  String
  price String
}

model UserMealHistory {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  user   Account @relation(fields: [userId], references: [id])
  userId String  @db.ObjectId
}
